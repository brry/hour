\documentclass[compress, xcolor=dvipsnames, handout]{beamer} % handout option for non-animated slides
% R intro course for a few hours
% Berry Boessenkool, Potsdam University and Hasso Plattner Institute, Germany
% berry-b@gmx.de


% Make sure to set weaving to knitr before compiling:
% Rstudio - Tools - Global Options - Sweave - weave Rnw files using: knitr


\setbeamerfont{frametitle}{size=\normalsize}

\usepackage{hyperref, graphicx}
\usepackage[dvipsnames]{xcolor}
\renewcommand\appendixname{Appendix}
\usepackage[absolute,overlay,showboxes]{textpos}
\usepackage[export]{adjustbox} % vertical adjustment of logos in line of text (valign)
\hypersetup{colorlinks=true, linkcolor=blue, urlcolor=blue}
\setbeamercolor{background canvas}{bg=white}
\setbeamercolor{normal text}{fg=black}
% \setbeamercolor{item}{fg=green}
% \beamertemplatenavigationsymbolsempty
\setbeamertemplate{navigation symbols}[only frame symbol]
%\usetheme{Madrid}

% suppress slide dots: replace   \useoutertheme[subsection=false]{miniframes}
\setbeamertemplate{headline}
{%
  \begin{beamercolorbox}[ht=3.5ex,dp=1.125ex,%
      leftskip=0cm,rightskip=0cm plus1filll]{section in head/foot}
    \usebeamerfont{section in head/foot}\usebeamercolor[fg]{section in head/foot}%
    \insertsectionnavigationhorizontal{0.99\textwidth}{}{}
  \end{beamercolorbox}%
}

\beamersetleftmargin{0.5cm}
\beamersetrightmargin{0.5cm}
\let\Tiny=\tiny % avoid warning: Font shape `OT1/cmss/m/n' in size <4> not available. size <5> substituted on input line
\setbeamertemplate{footline}[frame number]
\setbeamertemplate{footline}[text line]{%
  \parbox{\linewidth}{\vspace*{-12pt}
  \textcolor{black}{
   % \scriptsize
  ~~ Berry Boessenkool: short R intro ~~~~~
  \href{https://github.com/brry/hour}{github.com/brry/hour} \hfill
  ~~ \insertframenumber / \inserttotalframenumber~~~~~~~~~}}}


% define an environment for the exercises
\setbeamercolor{block title}{bg=CornflowerBlue!40}
\setbeamercolor{block body}{bg=YellowGreen!40}
\newcounter{exercisecount}
\setcounter{exercisecount}{0}
\newenvironment{exercise}[1]
{% This is the begin code
\stepcounter{exercisecount}
\begin{block}{Exercise \arabic{exercisecount}: #1}
}
{% This is the end code
\end{block} }
\resetcounteronoverlays{exercisecount}

% Reference images:
\newcommand{\bildlink}[1]{\flushleft{\tiny \href{#1}{\textcolor{gray}{#1}} \normalsize }}
\newcommand{\bildlinkt}[2]{\flushleft{\tiny \href{#1}{\textcolor{gray}{#2}} \normalsize }}

% format inline R command names in blue courier:
\newcommand{\rcode}[1]{\colorbox{gray!15}{\texttt{\textcolor{Blue}{\mathstrut#1}}}}
\newcommand{\key}[1]  {\colorbox{Melon!50}{\textbf{\texttt{\textcolor{Red} {#1}}}}}

% Nice appendix numbering:
\newcommand{\appendixbegin}{
   \newcounter{framenumberappendix}
   \setcounter{framenumberappendix}{\value{framenumber}}
}
\newcommand{\appendixend}{
   \addtocounter{framenumberappendix}{-\value{framenumber}}
   \addtocounter{framenumber}{\value{framenumberappendix}}
}

% Reduce space between code and output (https://stackoverflow.com/a/41468059):
\setlength{\OuterFrameSep}{-4pt}
\makeatletter
\preto{\@verbatim}{\topsep=-10pt \partopsep=-10pt }
\makeatother

% ACTUAL SLIDES %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\begin{document}
\color{black}


% ---------------------------

\section{intro (R, Rstudio)}

% ---------------------------

<<setup, include=FALSE>>=
knitr::opts_chunk$set(cache=FALSE, echo=TRUE, fig.height=3.3, fig.width=5, out.width='0.9\\textwidth')
knitr::knit_hooks$set(chunk = function(x, options) {
  out <- knitr::hooks_latex()$chunk(x, options)
  if(isTRUE(options$pauseresult)) out <- sub("\\begin{verbatim}", "\\pause \\begin{verbatim}", out, fixed=TRUE)
  out
  })
@

% ---------------------------

{\usebackgroundtemplate{\includegraphics[width=\paperwidth]{fig_extern/slidebg-1.pdf}}
\begin{frame}%[plain]
\begin{center}
\TPshowboxesfalse % no border around this box
\begin{textblock*}{18em}(10pt,30pt) % topleft corner x=10pt, y=30pt
\centering
\Large
\vspace{2em}
\includegraphics[width=0.8cm]{fig_extern/Rlogo.png}
\textbf{introduction\\[0.8em] \large 
start your \\[0.1em] programming journey \\ in a few hours}
\end{textblock*}
\normalsize
\vspace{12em}
Berry Boessenkool, June 2018 - Sept 2024\\[0.5em]
\texttt{berry-b@gmx.de}\\[1.5em]
% \href{https://github.com/brry/hour}{github.com/brry/hour}\\[1em]
\tiny
\textit{Presentation template generated with} \rcode{berryFunctions::createPres}\\
\normalsize
\TPshowboxesfalse % no border around this box
 % photography note and licence
\begin{textblock*}{8em}(230pt,50pt) % topleft corner x=230pt, y=30pt
\centering
% \textblockcolour{Dandelion}
\vspace{2em}
% \includegraphics[width=3em]{fig_extern/camera2.png}\\
\tiny
% ENCOURAGED\\[0.5em]%
\includegraphics[width=5em]{fig_extern/ccby.png}\\[-0.1em]
\href{https://creativecommons.org/licenses/by/4.0}{use freely, cite me}\\%
\normalsize
\vspace{1.5em}
\href{https://www.youtube.com/playlist?list=PLww5S2oes385cta316emIBe-GH6LDaHlF}{course videos}
\end{textblock*}
\TPshowboxestrue % borders around other boxes, as specified by \usepackage[...,showboxes]{textpos}
\textblockcolour{} % reset block fill color to none/transparent
\end{center}
\end{frame}
}


% ---------------------------

\begin{frame}{\rcode{print("Hello world!")}}
\pause
\begin{itemize}[<+->]
\vspace{-1em}
\item Geoecology @ Potsdam University
\item R Fan\only<+| handout:0>{atic} \onslide<+-> since 2010
\item R packages \href{https://github.com/brry/rdwd\#rdwd}{\includegraphics[width=0.5cm,valign=c]{fig_extern/hex.png}}
, \onslide<+-> training \& consulting \href{https://brry.github.io}{\includegraphics[width=0.5cm,valign=c]{fig_extern/Blogo.png}}
, \onslide<+-> community \href{https://www.meetup.com/de-DE/Berlin-R-Users-Group/}{\includegraphics[width=3em,valign=c]{fig_extern/BRUG_full.png}}\\
\hrulefill
\vspace{0.25em}
\item \includegraphics[width=0.7cm]{fig_extern/Rlogo.png} \onslide<+->is free, \onslide<+->open source, \onslide<+->has a large user community, \onslide<+-> will make your work efficient and productive \onslide<+-> and is the standard for data analysis and visualisation in many universities and industries
\item R installation instructions: \href{https://bookdown.org/brry/course/install.html}{bookdown.org/brry/course\#install}\\
\hrulefill
\item Wide but shallow introduction, no deep understanding
\item Brief inputs followed by short exercises (for max learning)
% \item \alert{If we're proceeding too fast, please interrupt!} % for live classes :)
\end{itemize}
\end{frame}

% ---------------------------

\begin{frame}{Integrated Development Environment (IDE): RStudio}
\pause
\begin{figure}
\includegraphics[width=0.95\textwidth]{fig_extern/rstudio_overview_en.png}
\end{figure}
\label{rstudio}
\end{frame}

% ---------------------------

\begin{frame}{Run code from a script}
\begin{figure}
\includegraphics[width=0.95\textwidth]{fig_extern/rstudio_send_code_en.png}
\end{figure}
\end{frame}

% ---------------------------

\begin{frame}{Preparation for the rest of the course}
\begin{exercise}{Set up folder and script}
\begin{enumerate}%[<+->]
  \item Download the course \href{https://github.com/brry/hour/raw/master/Material/Rintro.zip}{material} to a suitable folder.
  \item Unzip it (contains folder with files -$>$ 'unzip here').
  \item Open Rstudio, click "File" -$>$ "New Project" -$>$ "Existing directory", select your folder, click "Create Project".
  \item Check that Rstudio now has the project name in the topright (instead of "Project: None").
  \item In the bottomright "Files" panel, open the \texttt{script\_intro.R} file.
  \item Have a look at the \texttt{clim} and \texttt{meta} files. You can also do this within Rstudio. ;-) 
  \item BONUS: Change Rstudio settings, see \href{https://bookdown.org/brry/course/settings.html}{bookdown.org/brry/course - settings}
\end{enumerate}
\end{exercise}
\end{frame}

%------------------------------------------------------------%

\begin{frame}{Get started in R}
\pause
\begin{exercise}{R is an awesome calculator}
In the console, calculate ~ 21+21 ~,~ 7*6 ~ and ~ $\frac{0,3}{4}*\sqrt{313600}$\\
\textit{If you don't know how to compute a square root in R, you can google it!}
\end{exercise}
\pause
<<sol_Rcalc, eval=F>>=
21+21 ; 7*6 ; 0.3/4*sqrt(313600)
@
\pause
\begin{itemize}[<+->]
  \item objects: assign with ~\rcode{$<-$}~ Rstudio keyboard shortcut:  \key{ALT} + \key{-}  \\
        \rcode{nstudents <- 15}\\\rcode{nstudents}\\\rcode{nstudents > 12}
  \item What's a good object name? \onslide<+-> $\rightarrow$ short, but explanatory;
        \onslide<+-> lowerCamelStandard\_or\_underscore are good naming conventions
  \item comments: \texttt{\textcolor[rgb]{0,0.392,0}{\# everything after a hashtag is not executed.}}
\end{itemize}
\end{frame}

% ---------------------------

\section{reading data}

% ---------------------------

\begin{frame}[fragile]{Reading files into R, opening the function documentation}
\pause
\begin{itemize}[<+->]
  \item Read the climate data file into R with the command \rcode{read.table}
  \item Assign it to an object with a good name\\ \onslide<+->
        <<readfile1, eval=F>>=
        clim <- read.table(file="clim.txt")
        @
  \item If R tells you "no such file" exists, check the output of \rcode{dir()}.
  \item Check the object with \rcode{head(YourObject)}.
  \item \rcode{str(YourObject)} must yield 19 columns with data types: \texttt{int, char, num}.
  \item Use the documentation to find out settings for the arguments:\\
        <<readfile2, eval=F>>=
        help(read.table)   ;   ?read.table   #   or press F1.
        @
        \onslide<+->
        <<readfile3, eval=F>>=
        clim <- read.table(file="clim.txt", header=TRUE)
        @
\end{itemize}
\end{frame}

% ---------------------------

\begin{frame}[fragile]{Reading files into R}
\vspace{-0.4em}
\pause
<<solreadmeta_display, eval=FALSE, size="small">>=
read.table(text="
this is one column, another, and_the_last
1                 , 2      , 3                ")
@
\pause % \vspace{-0.6em}
<<solreadmeta_actual, echo=FALSE, size="small">>=
message("Error in scan( [...] : line 2 did not have 6 elements")
@
\pause This error means columns are incorrectly detected, by default split at\\
\pause \small \key{this ~-~ is ~-~ one ~-~ column, ~-~ another, ~-~ and\_the\_last} \normalsize
\pause
\begin{exercise}{Reading files}
\begin{enumerate}
  \item Read the metadata file into R with the command \rcode{read.table}, again assigning it to an object with a good name.
  \item You need to set the arguments \texttt{file}, \texttt{sep}, \texttt{header}\\
        \footnotesize \textit{(on R $<$ 4.0.0 (2020-04-24) also \texttt{stringsAsFactors})}\normalsize.\\
        Again: use the documentation to find out what settings are needed!
  \item \rcode{str(YourObject)} must yield 5 chr (character) columns
  \item BONUS: what does \rcode{tail(YourObject)} return?
\end{enumerate}
\end{exercise}
\end{frame}

%------------------------------------------------------------%

\begin{frame}[fragile]{Solution to exercise \arabic{exercisecount}: Reading files}
\vspace{-0.9em}
<<solreadfile_display, eval=FALSE>>=
clim <- read.table(file="clim.txt", header=TRUE)
meta <- read.table(file="meta.txt", header=TRUE, 
                   sep=";", stringsAsFactors=FALSE)
@
<<solreadfile_actual, echo=FALSE>>=
clim <- read.table(file="Rintro/clim.txt", header=TRUE)
meta <- read.table(file="Rintro/meta.txt", header=TRUE, 
                   sep=";", stringsAsFactors=FALSE)
@
In the slide source code, I created a copy of \rcode{clim} with fewer columns
to improve printing in the slides. 
Whenever I use \rcode{Clim} with a capital C, you can use your normal object:
<<solreadfile2, echo=-1>>=
Clim <- clim[,1:7]
tail(Clim) # last rows of an object
@
\end{frame}

% ---------------------------

\section{subsetting data.frames}

%------------------------------------------------------------%

\begin{frame}{Objects: data.frames}
\pause
\vspace{-0.5em}
\begin{itemize}[<+->]
  \item For tables with different data types (numbers, characters, categories, integers), R has the object type data.frame
  \item \rcode{read.table} also returns a data.frame
  \item If we have the object \rcode{DF}, we can subset with \rcode{DF[rows,columns]}
  \item \rcode{DF[1,2:4]; \onslide<+-> DF[2, ]; \onslide<+-> ~ DF[ ,"name"]; \onslide<+-> DF\$name}
\end{itemize}
\onslide<+->
\begin{exercise}{data.frame indexing}
  From the climate dataset, obtain:
  \begin{enumerate}
  \item The first 5 values in column 4
  \item The column UPM (relative humidity)
  \item BONUS 1: The maximum sunshine duration (SDK)
  \item BONUS 2: What command do you need to get the number of rows?
  \item BONUS 3: What is better in \rcode{DF[ ,"name"]} vs \rcode{DF[ ,3]}?
  \end{enumerate}
\end{exercise}
\end{frame}

%------------------------------------------------------------%

\begin{frame}[fragile]{Solution to exercise \arabic{exercisecount}: subsetting data.frames}
<<sol_subset, eval=T, echo=-(1:2), size="scriptsize">>=
options(width=80)
Clim <- head(clim, 20)
clim[1:5, 4]
Clim$UPM
max(clim$SDK)  ;   max(clim[ ,"SDK"])
nrow(clim)
@
\vspace{1em}
\rcode{DF[ ,"name"]} is easier to understand for humans and still returns the same if the order of the columns is changed.
But it needs more typing.\\
\rcode{DF\$name} is fast and safe from typos with the autocompletion in Rstudio but cannot be used in loops / functions with the name as input.
\end{frame}

% ---------------------------


\section{packages}

%------------------------------------------------------------%

\begin{frame}[fragile]{Installing R packages with additional functionality}
\pause
Download and install:
<<packages_install, eval=FALSE>>=
install.packages("ggplot2")
@
\pause
Needs to be executed only once, does not need admin rights.\\
\pause
Can also be done manually (with no typos) in Rstudio:
\pause
\includegraphics[width=0.5\textwidth]{fig_extern/rstudio_pack.png}\\
\end{frame}

% ---------------------------

\begin{frame}[fragile]{Using R packages}
\pause
Load from local library:
<<packages_library, eval=FALSE>>=
library("ggplot2")
@
\pause Needed in every new R session.\\
\pause Should be in the script for it to be reproducible.\\
\pause After that the functions from the package are directly usable.\\[1em]
\pause For functions with the same name in multiple packages, the one that was loaded last is used.\\
\pause To make it clear from which package a function is used, the \rcode{package::function()} structure
\pause
<<packages_colon1, eval=FALSE>>=
rdwd::findID("Potsdam")
@
\pause
is clear + unambiguous, and hence safer than
\pause
<<packages_colon2, eval=FALSE>>=
library(rdwd)
findID("Potsdam")
@
\end{frame}

% ---------------------------

\section{plotting}

% ---------------------------

\begin{frame}[fragile]{Plotting documentation}
\pause
There are several packages with a \rcode{plot} function, so opening the documentation shows several options (all loaded packages):
\pause
<<plot_help1, eval=FALSE>>=
?plot
@
\pause \vspace{0.6em}
\includegraphics[width=8cm]{fig_extern/rstudio_help_plot.png}\\
\pause \vspace{0.6em}
Select the \rcode{plot.default} function from the \rcode{{graphics}} package.
\end{frame}

% ---------------------------

\begin{frame}[fragile]{Base R plotting command}
\pause
General code for scatterplots: \rcode{plot(x, y, ...)}
\pause \vspace{0.4em}
<<plot_indo1, echo=-1, fig.height=2.5>>=
par(mar=c(2.8,2.8,2,0), mgp=c(1.8,0.7,0))
plot(x=Indometh$time, y=Indometh$conc,
     col="orange", pch=16, main="Awesome Graph!")
@
\end{frame}

% ---------------------------

\begin{frame}[fragile]{Plotting exercise}
\pause
\key{Upon error "Figure margins too large",}\\
\key{drag the Rstudio Plots panel bigger.}
\pause \vspace{-0.4em}
\begin{exercise}{Scatterplots, line plots}
\begin{enumerate}
  \item Generate a figure with \rcode{plot(clim\$VPM, clim\$TMK)}
  \item Improve the axis labels. Read the documentation to find the needed arguments. Use the metadata to figure out the column name meanings.
  \item Convert the date column with 
<<dateconv, size="small">>=
clim$MESS_DATUM <- as.Date(clim$MESS_DATUM)
# this uses format="%Y-%m-%d"
@
\vspace{-0.1em}
  \item Plot a time series of the daily temperature maximum. 
        What value do you need to give to the argument \texttt{type}? 
        Again, use the documentation of \rcode{?plot()} to find out.
  \item BONUS: Add informative graph titles to both plots.
\end{enumerate}
\end{exercise}
\end{frame}

%------------------------------------------------------------%

\begin{frame}[fragile]{Solution to exercise \arabic{exercisecount}: Scatterplots, line plots}
<<sol_plot, eval=T, echo=-1, size="scriptsize", fig.height=2.5>>=
par(mfrow=c(1,2), mgp=c(2,0.7,0), mar=c(3,3,3,1), las=1, cex.main=0.8)
plot(clim$TMK, clim$VPM, xlab="air temperature", ylab="vapor pressure", 
     main="correlation daily averages\nPotsdam 2023-2024, DWD")

plot(clim$MESS_DATUM, clim$TXK, type="l", main="seasonality visible")

@
\end{frame}

%------------------------------------------------------------%

\begin{frame}[fragile]{Coding demo: create nice looking graphs}
\pause %\vspace{0.2em}
\tiny
<<plot_live1, fig.height=1.8>>=
par(mar=c(3,3,2,1), mgp=c(1.9,0.7,0))
plot(clim$TMK, clim$VPM, xlab="air temperature", ylab="vapor pressure", 
     main="The maximum vapor pressure is temperature-limited
     (correlation daily averages Potsdam 2023-2024, DWD)",
     las=1, pch=3, cex=1.2, col="#FF000066", cex.main=0.7)
@
\vspace{0.4em}
<<plot_live2, fig.height=1.0, echo=-1>>=
par(mar=c(3,3,0,1), mgp=c(1.9,0.7,0), las=1)
# install.packages("berryFunctions")
plot(clim$MESS_DATUM, clim$TXK, type="l", xlab="", xaxt="n", lwd=3)
berryFunctions::monthAxis()
@
\end{frame}

%------------------------------------------------------------%

\begin{frame}[fragile]{Commonly needed \rcode{plot} arguments}
<<plotoverview, eval=FALSE>>=
plot(x, y, # point coordinates
col="lightblue", # point color
pch=0, # point character (symbol)
xlab="My label  [km]", ylab="", # axis labels
main="Graph title", # title
cex=1.8, # character expansion (symbol size)
type="l", # draw lines instead of points
lwd=3, # line width (thickness of lines)
las=1, # label axis style (axis numbers upright)
xaxt="n" # axis type (none to suppress axis)
)
@
\end{frame}

%------------------------------------------------------------%

\begin{frame}[fragile]{Exporting graphics}
\pause
Open a PDF device into which all the plots are routed:
<<pdf_open, eval=FALSE>>=
pdf("filename.pdf", width=7, height=5)
@
\pause
Create (several) plots:
<<pdf_graphics, eval=FALSE>>=
plot(clim$TMK, clim$FM)
boxplot(clim[,c(4,5,8:12,16:18)], 
        col=rainbow(10), range=0)
@
\pause
Close the PDF device:
<<pdf_close, eval=FALSE>>=
dev.off()
@
\pause
Open the pdf in a viewer (not editor) to enable live edits:
<<function_openpdf, eval=FALSE>>=
berryFunctions::openPDF("filename.pdf")
@
\end{frame}

% ---------------------------

\section{for-loops}

% ---------------------------

\begin{frame}[fragile]{Preparing for \rcode{for} loops}
\pause
\begin{exercise}{using objects to subset}
\begin{enumerate}
  \item Please give your metadata rownames as follows:
  <<metarownames>>=
rownames(meta) <- meta$Par
@
  \item Create an object \rcode{var} with the character string \rcode{"FX"}.
  \item Get the meta value for row \rcode{var} and column \rcode{"Label"}.
  \item Plot the \rcode{var} column of \rcode{clim} as a time series.
  \item Use the output from task 2 to give the plot a title.
  \item BONUS: make the x-axis nicer by suppressing the default axis (\rcode{xaxt="n"})
        and adding a monthAxis from the \rcode{berryFunctions} package.
\end{enumerate}
\end{exercise}
\end{frame}

%------------------------------------------------------------%

\begin{frame}[fragile]{Solution to exercise \arabic{exercisecount}: using objects to subset}
\vspace{-1.5em}
<<sol_objectsubset, echo=-3, size="small", fig.height=1.9>>=
var <- "FX"
meta[var, "Label"]
par(mar=c(2,3,2,1), mgp=c(2,0.7,0), las=1)
plot(clim$MESS_DATUM, clim[,var], type="l", xaxt="n",
     main=meta[var, "Label"], ylab="", xlab="")
berryFunctions::monthAxis()
@
\end{frame}

%------------------------------------------------------------%

\begin{frame}[fragile]{For loops}
\onslide<+->
A for loop creates a variable, sets it to a value, runs some code,\\ \onslide<+->
then sets the variable to the next value, runs the code with that,\\ and so on.
\onslide<+->
<<for_loop, eval=FALSE>>=
for(var in meta$Par)
{
  plot(clim$MESS_DATUM, clim[,var], type="l", xaxt="n",
       main=meta[var, "Label"], ylab="", xlab="")
  berryFunctions::monthAxis()
}
@
\end{frame}

% ---------------------------

\section{functions}

% ---------------------------

\begin{frame}[fragile]{Writing functions}
\pause
\vspace{-0.8em}
\begin{itemize}[<+->]
\item write a function if a piece of code is to be run several times
\item use \rcode{for} loops (almost) only for graphics
\item otherwise, use functions \onslide<+-> (with unit tests)
\item
% \onslide<+->
<<function_def>>=
analyze_clim_column <- function(cn)
  {
  values <- clim[,cn]
  hist(values, breaks=20, col="salmon",
       main=meta[cn,"Label"])
  output <- max(values, na.rm=TRUE)
  return(output)
  }
@
\item \rcode{values} and \rcode{output} are local, temporary objects, \onslide<+-> not available outside of the function call
\item for flexibility, use \rcode{function(df, cn)} and \rcode{df[,cn]} instead of hardcoding the "clim" object name
\end{itemize}
\end{frame}

%------------------------------------------------------------%

\begin{frame}[fragile]{Calling your function}
\pause
<<function_call, echo=-1, fig.height=3>>=
par(mar=c(2.8,2.8,2,0), mgp=c(1.8,0.7,0), las=1)
analyze_clim_column("FX")
@
\end{frame}

%------------------------------------------------------------%

\begin{frame}[fragile]{Preparing for \rcode{sapply} loops over columns / values}
\pause
looping over the columns of a data.frame:
\pause \vspace{0.4em}
<<sapply_columns, eval=FALSE>>=
sapply(X=clim, FUN=class)
@
\pause
<<sapply_columns_internal, echo=FALSE>>=
sapply(X=clim[,1:4], FUN=class)
@
\pause \vspace{1em}
looping over a vector of values:
\pause \vspace{0.4em}
<<sapply_vector, pauseresult=TRUE>>=
sapply(X=c("FX", "MESS_DATUM", "QN_3"),   # anonymous
       FUN=function(n) class(clim[,n])  ) # function
@
\end{frame}

%------------------------------------------------------------%

\begin{frame}[fragile]{Running a small data analysis and visualisation project}
\pause
\begin{exercise}{Final task: loop over the columns with sapply}
In a self contained (separate script),
\begin{enumerate}
  \item read both files (rewrite from scratch for practice)
  \item write a function (from scratch) that 
  \begin{itemize}
    \item accepts a column name
    \item plots a histogram of that column
    \item uses the label from the meta data for the title
    \item and returns the range (min + max) of available data (ignore NAs)
  \end{itemize}
  \item run the function for all suitable columns,
  \item exporting the individual graphs into a pdf file.
\end{enumerate}
\end{exercise}
\end{frame}

%------------------------------------------------------------%

\begin{frame}[fragile]{Solution to exercise \arabic{exercisecount}: loop over the columns with sapply}
\pause \vspace{-0.4em}
\footnotesize
<<sapply_graphics, results='hide', fig.show='hide'>>=
clim <- read.table("Rintro/clim.txt", header=TRUE)
meta <- read.table("Rintro/meta.txt", header=TRUE,sep=";")
clim$MESS_DATUM <- as.Date(clim$MESS_DATUM)
rownames(meta) <- meta$Par

analyze_clim_column <- function(cn)
  {
  values <- clim[,cn]
  hist(values, breaks=20, col="salmon", main=meta[cn,"Label"])
  return(range(values, na.rm=TRUE))
  }
analyze_clim_column("TMK") # test the function
pdf("clim_columns.pdf", height=5)
ranges <- sapply(meta$Par, analyze_clim_column)
dev.off()

#
@
\vspace{-1em}
<<sapply_graphics2, echo=-1>>=
options(width=80)
ranges[,1:11]
@
\end{frame}

% ---------------------------

\section{further help, outlook}

% ---------------------------


%------------------------------------------------------------%

\begin{frame}[fragile]{Selected resources}
\pause
\begin{itemize}[<+->]
\item (online) Book: Grolemund \& Wickham (2017) - \href{https://r4ds.hadley.nz/}{R for Data Science}
\item German book: Uwe Ligges (2005) - Programmieren mit R
\item \href{https://bookdown.org/brry/course/}{bookdown.org/brry/course}
\item \href{https://github.com/jonasstein/R-Reference-Card/raw/master/R-refcard.pdf}{Reference Card} by Tom Short \& Jonas Stein
\item \href{https://stackoverflow.com/questions/tagged/r}{StackOverflow} for programming questions $<$-- \alert{main resource}
% \item More at \href{https://bookdown.org/brry/course/resources.html}{bookdown.org/brry/course/resources}
\end{itemize}
\end{frame}

%------------------------------------------------------------%

\begin{frame}{Feedback}
\center{
Please fill out the \href{https://forms.gle/8pjCd9DwARSLgYVT7}{feedback form}.\\[1em]
(it only takes a few minutes and helps to improve the course)\\[1em]
Thanks!\\[1em]
}
\end{frame}

%------------------------------------------------------------%

\end{document}